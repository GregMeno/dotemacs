(index ("current-thread" 0) ("make-thread" 158) ("thread-specific-set!" 326) ("thread-specific" 523) ("thread-send" 658) ("thread-start!" 787) ("thread?" 981) ("thread-receive" 1107) ("thread-mailbox-next" 1388) ("thread-mailbox-rewind" 1388) ("thread-mailbox-extract-and-rewind" 1388))
(def (sig (procedure "(current-thread)" (id current-thread))) (p "Returns the current thread as an object, converting it to a mailbox-thread if necessary."))
(def (sig (procedure "(make-thread THUNK [NAME])" (id make-thread))) (p "Creates a mailbox thread that will run " (tt "THUNK") " and names it after " (tt "NAME") "."))
(def (sig (procedure "(thread-specific-set! THREAD OBJECT)" (id thread-specific-set!))) (p "Like srfi-18's procedure this one sets the thread-specific of " (tt "THREAD") " to " (tt "OBJECT") "."))
(def (sig (procedure "(thread-specific THREAD)" (id thread-specific))) (p "Returns the thread-specific object of " (tt "THREAD") "."))
(def (sig (procedure "(thread-send THREAD MSG)" (id thread-send))) (p "Sends a " (tt "MSG") " to " (tt "THREAD") "'s mailbox."))
(def (sig (procedure "(thread-start! THREAD)" (id thread-start!))) (p "Starts " (tt "THREAD") " if it is a thread, if " (tt "THREAD") " is a procedure " (tt "make-thread") " is called first."))
(def (sig (procedure "(thread? THREAD)" (id thread?))) (p "Returns " (tt "#t") " if " (tt "THREAD") " is a mailbox-thread."))
(def (sig (procedure "(thread-receive [TIMEOUT [DEFAULT]])" (id thread-receive))) (p "Returns the next message of the current thread's mailbox. This will block until a message arrives unless " (tt "TIMEOUT") " is given. If the timeout is reached " (tt "DEFAULT") " is returned."))
(def (sig (procedure "thread-mailbox-next" (id thread-mailbox-next)) (procedure "thread-mailbox-rewind" (id thread-mailbox-rewind)) (procedure "thread-mailbox-extract-and-rewind" (id thread-mailbox-extract-and-rewind))) (p "Those work like their SRFI-18's brothers."))
