(index ("tc-hdb-open" 0) ("TC_HDBOWRITER" 547) ("TC_HDBOREADER" 547) ("TC_HDBOCREAT" 547) ("TC_HDBOTRUNC" 547) ("TC_HDBONOLCK" 547) ("TC_HDBOLCKNB" 547) ("tc-hdb-close" 910) ("tc-hdb-put!" 1017) ("tc-hdb-delete!" 1135) ("tc-hdb-get" 1247) ("tc-hdb-iter-init" 1423) ("tc-hdb-iter-next" 1494) ("tc-hdb-fold" 1596))
(def (sig (procedure "(tc-hdb-open FILE #!key FLAGS TUNE-OPTS MUTEX? NUM-BUCKETS RECORD-ALIGNMENT NUM-FREE-BLOCKS CACHE-LIMIT MMAP-SIZE)" (id tc-hdb-open))) (p "Returns a " (tt "HDB") " object as a c-pointer.  FLAGS specifies creation and locking behavior; by default files are opened for reading (TC_HDBOREADER), writing (TC_HDBOWRITER) and creating (TC_HDBOCREAT).") (p "TUNE-OPTS, along with the other keywords specify options to the " (tt "tchdbtune") " function.  MUTEX? opens the file under mutex mode (as with " (tt "tchdbsetmutex") ")."))
(def (sig (constant "TC_HDBOWRITER" (id TC_HDBOWRITER)) (constant "TC_HDBOREADER" (id TC_HDBOREADER)) (constant "TC_HDBOCREAT" (id TC_HDBOCREAT)) (constant "TC_HDBOTRUNC" (id TC_HDBOTRUNC)) (constant "TC_HDBONOLCK" (id TC_HDBONOLCK)) (constant "TC_HDBOLCKNB" (id TC_HDBOLCKNB))) (p "These flags to " (tt "tc-hdb-open") " specify creation and locking behavior."))
(def (sig (procedure "(tc-hdb-close HDB)" (id tc-hdb-close))) (p "Closes and frees the database handle."))
(def (sig (procedure "(tc-hdb-put! HDB KEY VALUE)" (id tc-hdb-put!))) (p "Put (KEY, VALUE) into hash database HDB."))
(def (sig (procedure "(tc-hdb-delete! HDB KEY)" (id tc-hdb-delete!))) (p "Delete KEY from hash database HDB."))
(def (sig (procedure "(tc-hdb-get HDB KEY)" (id tc-hdb-get))) (p "Returns the string VALUE associated with KEY in hash database HDB, or " (tt "#f") " if KEY does not exist."))
(def (sig (procedure "(tc-hdb-iter-init HDB)" (id tc-hdb-iter-init))))
(def (sig (procedure "(tc-hdb-iter-next HDB)" (id tc-hdb-iter-next))) (p "Returns a " (tt "STRING")))
(def (sig (procedure "(tc-hdb-fold HDB KONS KNIL)" (id tc-hdb-fold))) (p "Returns the accumulated result.  Specify " (tt "ALIST-CONS") " for the " (tt "KONS") " to get an alist representation of the database."))
