(index ("unit-convert" 0) ("unit-equal?" 441) ("define-quantity" 609) ("define-unit" 1336) ("define-prefix-unit" 1678))
(def (sig (procedure "unit-convert:: SRC * DEST * [VAL1 ...] -> (FACTOR1 ... )" (id unit-convert))) (p "Converts the given numeric values expressed in unit " (tt "SRC") " to their equivalents in unit " (tt "DEST") ".") (p "Arguments " (tt "SRC, DEST") " are records of type " (tt "unit") ". See the definitions below for information about the units that are defined by this extension, as well as for information about creating new units."))
(def (sig (procedure "unit-equal?:: UNIT1 * UNIT2 -> BOOL" (id unit-equal?))) (p "Returns true if the two units have the same dimension and factor, false otherwise."))
(def (sig (syntax "(define-quantity name expr)" (id define-quantity))) (p "Defines a derivative quantity " (tt "NAME") ".") (p (tt "EXPR") " is an S-expression with the following syntax:") (pre "quantity-expr ::=  base-quantity\n                 | derived-quantity\n                 | (* quantity-expr quantity-expr)\n                 | (* quantity-expr integer)\n                 | (/ quantity-expr quantity-expr)\n                 | (/ quantity-expr integer)\n                 | (** quantity-expr integer)") (p "where") (dl (dt (tt "base-quantity")) (dd "one of the predefined base quantities") (dt (tt "derived-quantity")) (dd "a quantity created by " (tt "define-quantity")) (dt (tt "**")) (dd "exponentiation operator")))
(def (sig (syntax "(define-unit name dims factor . abbrevs)" (id define-unit))) (p "Defines a variable " (tt "NAME") " that holds a unit definition of a unit with the given dimension and factor.") (p (tt "DIMS") " can be either one of the base quantities (see next section)  or a derivative quantity created by " (tt "define-quantity") "."))
(def (sig (syntax "(define-prefix-unit unit prefix . abbrevs)" (id define-prefix-unit))) (p "Defines a variable whose name is the concatenated " (tt "PREFIX") " and " (tt "UNIT") " and that holds a unit definition of the given unit and prefix."))
