(index ("fields" 0) ("body" 749) ("message" 960) ("comment" 1150))
(def (sig (procedure "fields" (id fields))) (p "This parser will parse an arbitrary number of header fields as defined in the RFC. For each field, an appropriate alist is created. The following fields are recognized:") (ul (li (tt "from")) (li (tt "sender")) (li (tt "return-path")) (li (tt "reply-to")) (li (tt "to")) (li (tt "cc")) (li (tt "bcc")) (li (tt "message-id")) (li (tt "in-reply-to")) (li (tt "references")) (li (tt "subject")) (li (tt "comments")) (li (tt "keywords")) (li (tt "orig-date")) (li (tt "resent-date")) (li (tt "resent-from")) (li (tt "resent-sender")) (li (tt "resent-to")) (li (tt "resent-cc")) (li (tt "resent-bcc")) (li (tt "resent-msg-id")) (li (tt "resent-reply-to")) (li (tt "received")) (li (tt "optional-field"))))
(def (sig (procedure "body" (id body))) (p "This parser will parse a message body as specified by the RFC; that is, any number of text characters, which may be divided into separate lines by " (tt "CRLF") "."))
(def (sig (procedure "message" (id message))) (p "This parser will parse a complete message as defined by the RFC and it broken down into the separate header fields and the message body."))
(def (sig (procedure "comment" (id comment))) (p "This parser parses comment text, as defined by the RFC. Comments may nest."))
