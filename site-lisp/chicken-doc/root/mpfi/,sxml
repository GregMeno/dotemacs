((section 2 "mpfi" (section 3 "Description" (p "The " (tt "mpfi") " egg contains bindings for the " (link "http://perso.ens-lyon.fr/nathalie.revol/software.html" "mpfi") " library for interval arithmetic (a short introduction to interval arithmetic can be found at the mpfi site).")) (section 3 "Author" (p "Jeronimo Pellegrini")) (section 3 "Requirements" (ul (li "the mpfi library") (li "the " (link "http://www.mpfr.org/" "mpfr") " library (needed by mpfi)"))) (section 3 "Example" (highlight scheme "(use mpfi)\n\n(let ((a (make-ia-interval-f64 1 10))\n      (b (make-ia-interval-f64 -0.5 1)))\n  (when (ia-has-zero? b)\n      (display \"b contains zero!\")\n      (newline))\n  (display \"a = \")\n  (display (ia->string a))\n  (newline)\n  (display \"b = \")\n  (display (ia->string b))\n  (newline)\n  (display \"a x b = \")\n  (display (ia->string (ia* a b)))\n  (newline))\n\n==>\n\nb contains zero!\na = [1.0__10.0]\nb = [-0.5__1.0]\na x b = [-5.0__10.0]")) (section 3 "Documentation" (def (sig (procedure "(make-ia-interval-empty)" (id make-ia-interval-empty)) (procedure "(make-ia-interval-f64 LO HI)" (id make-ia-interval-f64))) (p "The following procedures are available:") (p "Arithmetic:") (pre "(ia+ A B)\n(ia+f64 A F)\n(ia- A B)\n(ia-f64 A F)\n(f64-ia F A)\n(ia* A B)\n(ia*f64 A F)\n(ia/ A B)\n(ia/f64 A F)\n(f64/ia F A)") (p "The procedures ending with " (tt "+") ", " (tt "-") ", " (tt "*") " and " (tt "/") " operate on two intervals and give an interval as result. The procedures that have " (tt "f64") " in their name take one flonum argument.") (p "Unary functions:") (pre "(ia-neg A)\n(ia-sqr A)  ;; square, (* x x)\n(ia-inv A)  ;; inverse, (/ 1 x)\n(ia-sqrt A) ;; square root\n(ia-abs A)\n(ia-log A)\n(ia-exp A)\n(ia-exp2 A)\n(ia-log1p A)\n(ia-expm1 A)\n(ia-log2 A)\n(ia-log10 A)") (p "Trigonometric functions:") (pre "(ia-cos A)\n(ia-sin A)\n(ia-tan A)\n(ia-acos A)\n(ia-asin A)\n(ia-atan A)\n(ia-cosh A)\n(ia-sinh A)\n(ia-tanh A)\n(ia-acosh A)\n(ia-asinh A)\n(ia-atanh A) ") (p "Constants:") (pre "(ia-const-log2)\n(ia-const-pi)\n(ia-const-e)") (p "These procedures calculate e, pi and the logarithm of two and give back intervals representing them.") (p "Comparisons:") (pre "(ia< A B)\n(ia> A B)") (p "Given two intervals A and B, A is considered greater than B is and only if all elements of A are greater than all elements of B.") (pre "(ia-overlap? A B)") (p "Returns true if A overlap with or contains B.") (pre "(ia-nan? A)\n(ia-inf? A)\n(ia-zero? A)\n(ia-has-zero? A)\n(ia-positive? A)\n(ia-negative? A)\n(ia-strictly-positive? A)\n(ia-strictly-negative? A)\n(ia-nonpositive? A)\n(ia-nonnegative? A)\n(ia-bounded? A)\n(ia-empty? A)\n(ia-inside?  A B)\n(ia-f64-inside? A B)") (p "Procedures returning " (tt "flonum") ":") (pre "(ia-diameter A)\n(ia-diameter-absolute A)\n(ia-diameter-relative A)\n(ia-magnitude A)\n(ia-mignitude A)\n(ia-random A)\n(ia-middle A)") (p "Other procedures:")) (def (sig (procedure "(ia-lo A)" (id ia-lo)) (procedure "(ia-hi A)" (id ia-hi))) (p "Return the low and high endpoints of the interval.")) (def (sig (procedure "(ia->string)" (id ia->string))) (p "Converts an interval into a string.") (p "Each nondestructive procedure described above (like " (tt "ia/") " for example) has a destructive counterpart in which there is one extra argument where the result goes:") (pre "(ia/ a b)\n(ia/! result a b)") (p "The destructive operation does not allocate memory; the nondestructive one does."))) (section 3 "Bugs and limitations" (ul (li "the mpfi egg is still not tested enough") (li "Ther is only support for floating point intervals. Support for integers is planned."))) (section 3 "Changelog" (ul (li "0.1 Initial Release"))) (section 3 "License" (pre " Copyright (c) 2010, Jeronimo C. Pellegrini\n All rights reserved.\n \n Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following\n conditions are met:\n \n   Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n     disclaimer. \n   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\n     disclaimer in the documentation and/or other materials provided with the distribution. \n   Neither the name of the author nor the names of its contributors may be used to endorse or promote\n     products derived from this software without specific prior written permission. \n \n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\n OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\n AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR\n CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n POSSIBILITY OF SUCH DAMAGE."))))