((tags "egg") (section 2 "bloom-filter" (toc)) (section 2 "Documentation" (p "Provides a simple Bloom Filter") (p "Bloom Filter Object") (section 3 "make-bloom-filter" (def (sig (procedure "(make-bloom-filter M MESSAGE-DIGEST-PRIMITIVES [K])" (id make-bloom-filter))) (p "Returns a bloom-filter object with " (tt "M") " bits of discrimination and a set of hash functions built from the supplied " (tt "MESSAGE-DIGEST-PRIMITIVES") ".") (p "The number of hash functions, k, is not necessarily the same as the number of message-digests. A hash function is defined as returning an unsigned 32 bit integer. Most message-digests return more 32 bits of hash. The actual length of the hash is divided into 32 bit blocks to get the individual hash functions.") (p "The argument " (tt "K") " will restrict the actual number of hash functions to the \"first\" k, no matter how many more the supplied message-digests create. First in the order of " (tt "MESSAGE-DIGEST-PRIMITIVES") ".") (p "Selecting the optimal set of message-digests is beyond the scope of make-bloom-filter."))) (section 3 "bloom-filter-n" (def (sig (procedure "(bloom-filter-n BLOOM-FILTER)" (id bloom-filter-n))) (p "The current population - the number of objects added to the filter."))) (section 3 "bloom-filter-m" (def (sig (procedure "(bloom-filter-m BLOOM-FILTER)" (id bloom-filter-m))) (p "The number of bits of discrimination."))) (section 3 "bloom-filter-k" (def (sig (procedure "(bloom-filter-k BLOOM-FILTER)" (id bloom-filter-k))) (p "The number of hash functions. (See above.)"))) (section 3 "bloom-filter-p-false-positive" (def (sig (procedure "(bloom-filter-p-false-positive BLOOM-FILTER [N])" (id bloom-filter-p-false-positive))) (p "The probability of false positives for the given population size. The current population is assumed."))) (section 3 "bloom-filter-set!" (def (sig (procedure "(bloom-filter-set! BLOOM-FILTER OBJECT)" (id bloom-filter-set!))) (p "Add the specified " (tt "OBJECT") " to the indicated " (tt "BLOOM-FILTER") "."))) (section 3 "bloom-filter-exists?" (def (sig (procedure "(bloom-filter-exists? BLOOM-FILTER OBJECT)" (id bloom-filter-exists?))) (p "Is the specified " (tt "OBJECT") " in the indicated " (tt "BLOOM-FILTER") ".") (p "Auxillary Procedures"))) (section 3 "optimum-k" (def (sig (procedure "(optimum-k N M)" (id optimum-k))) (p "Optimal count of hash functions for the given population size " (tt "N") " and " (tt "M") " bits of discrimination."))) (section 3 "optimum-m" (def (sig (procedure "(optimum-m K N)" (id optimum-m))) (p "Optimal count of bits of discrimination for the given population size " (tt "N") " and " (tt "K") " number of hash functions."))) (section 3 "p-false-positive" (def (sig (procedure "(p-false-positive K N M)" (id p-false-positive))) (p "What is the probability of false positives for the population size " (tt "N") " assuming " (tt "K") " hash functions and " (tt "M") " bits of discrimination."))) (section 3 "desired-m" (def (sig (procedure "(desired-m P N [K])" (id desired-m))) (p "Calculates a near-optimal number of bits of discrimination to meet the desired probability of false positives " (tt "P") ", with the given population size " (tt "N") " and number of hash functions " (tt "K") ". When the " (tt "K") " parameter is missing " (tt "optimum-k") " is used to calculate a value.") (p "A multi-valued return of the calculated " (tt "M") ", " (tt "K") ", and " (tt "P") " values. The calculated probability may be lower than the desired."))) (section 3 "actual-k" (def (sig (procedure "(actual-k MESSAGE-DIGEST-PRIMITIVES)" (id actual-k))) (p "Calculates the actual number of hash functions for the " (tt "MESSAGE-DIGEST-PRIMITIVES") "."))) (section 3 "p-random-one-bit" (def (sig (procedure "(p-random-one-bit K N M)" (id p-random-one-bit))) (p "Calculates the probablility of a random set bit for the given number of hash functions " (tt "K") ", population size " (tt "N") ", and bits of discrimination " (tt "M") ".")))) (section 2 "Usage" (highlight scheme "(require-extension bloom-filter)")) (section 2 "References" (p (link "http://www.cs.wisc.edu/~cao/papers/summary-cache/node8.html" "Nice exposition of Bloom Filter False Positive Probability."))) (section 2 "Requirements" (p (int-link "moremacros") " " (int-link "iset") " " (int-link "message-digest") " " (int-link "record-variants") " " (int-link "check-errors") " " (int-link "hashes"))) (section 2 "Author" (p (int-link "kon lovett"))) (section 2 "Version history" (dl (dt "1.1.0") (dd "A little faster (25%).") (dt "1.0.0") (dd "From the Chicken 3 version, with some minor changes. (No message-digest registry, for example.)"))) (section 2 "License" (p "Copyright (C) 2010 Kon Lovett.  All rights reserved.") (p "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:") (p "The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.") (p "THE SOFTWARE IS PROVIDED ASIS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")))