(index ("make-tcp-server" 0) ("tcp-server-prepare-hard-close-procedure" 957) ("tcp-server-accept-connection-procedure" 957) ("tcp-server-get-addresses-procedure" 957))
(def (sig (procedure "(make-tcp-server LISTENER THUNK [MAXREQUESTS])" (id make-tcp-server))) (p "Returns a procedure that, when invoked, will start the TCP server. " (tt "LISTENER") " should be a " (tt "tcp-listener") " objects as returned by " (tt "tcp-listen") ". For every incoming request, a thread will be started and " (tt "THUNK") " (a procedure of zero arguments) will be invoked, with the current input- and output-ports bound so that any I/O is done from/to the client connection. If the optional argument " (tt "MAXREQUESTS") " is given, then it specifies an upper limit for currently executing requests. The returned server procedure accepts an optional argument that indicates whether some diagnostic messages for incoming requests should be written to the value of " (tt "(current-error-port)") ". The optional argument may be a string (which will prefix each diagnostic message), or just " (tt "#t") " (which results in a default prefix)."))
(def (sig (parameter "tcp-server-prepare-hard-close-procedure" (id tcp-server-prepare-hard-close-procedure)) (parameter "tcp-server-accept-connection-procedure" (id tcp-server-accept-connection-procedure)) (parameter "tcp-server-get-addresses-procedure" (id tcp-server-get-addresses-procedure))) (p "Parameters containing primitive socket operations. Use these to parameterize the exact behaviour for closing abruptly, accepting connections and getting peer addresses (for example to use the " (int-link "openssl") " egg in combination with the generic server). The default values are " (tt "tcp-abandon-port") ", " (tt "tcp-accept") " and " (tt "tcp-addresses") ", respectively."))
