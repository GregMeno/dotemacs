(index ("php-serialize" 0) ("php-unserialize" 275) ("php-s11n-writer" 542) ("php-s11n-reader" 962) ("php-s11n-array-reader" 1425) ("php-s11n-object-reader" 1719) ("php-s11n-write" 2017) ("php-s11n-read" 2243) ("php-s11n-read-null" 2477) ("php-s11n-read-boolean" 2657) ("php-s11n-read-integer" 2848) ("php-s11n-read-float" 3124) ("php-s11n-read-string" 3422) ("php-s11n-read-array" 3595) ("php-s11n-read-array/alist" 3784) ("php-s11n-read-array/hash-table" 3980) ("php-s11n-read-object" 4237))
(def (sig (procedure "(php-serialize VALUE)" (id php-serialize))) (p "Returns a string containing the serialized PHP representation of the Scheme value " (tt "VALUE") ". This is a convenience wrapper around " (tt "php-s11n-write") ", the latter doing all the actual work."))
(def (sig (procedure "(php-unserialize STRING)" (id php-unserialize))) (p "Reads a serialized PHP literal from " (tt "STRING") " and returns it as a Scheme value. This is a convenience wrapper around " (tt "php-s11n-read") ", the latter doing all the actual work."))
(def (sig (parameter "php-s11n-writer" (id php-s11n-writer))) (p "Sets the procedure to call for serializing any Scheme values not included in the default data type mappings built into the " (tt "php-s11n") " egg. The procedure will be invoked with two arguments, " (tt "VALUE") " and " (tt "PORT") ".") (p "The parameter defaults to " (tt "#f") ", raising an error when trying to serialize an unsupported data type."))
(def (sig (parameter "php-s11n-reader" (id php-s11n-reader))) (p "Sets a procedure to call for unserializing any unknown data types encountered in the input. The procedure will be invoked with one argument, " (tt "PORT") ". Note that you should never need to handle this case unless PHP's serialization format substantially changes.") (p "The parameter defaults to " (tt "#f") ", raising an error if the serialized input contains unknown data type specifiers."))
(def (sig (parameter "php-s11n-array-reader" (id php-s11n-array-reader))) (p "Sets a procedure to call for unserializing any PHP array encountered in the input. The procedure will be invoked with one argument, " (tt "PORT") ".") (p "The parameter defaults to " (tt "php-s11n-read-array") "."))
(def (sig (parameter "php-s11n-object-reader" (id php-s11n-object-reader))) (p "Sets a procedure to call for unserializing any PHP object encountered in the input. The procedure will be invoked with one argument, " (tt "PORT") ".") (p "The parameter defaults to " (tt "php-s11n-read-object") "."))
(def (sig (procedure "(php-s11n-write VALUE [PORT])" (id php-s11n-write))) (p "Writes a serialized PHP representation of " (tt "VALUE") " to " (tt "PORT") ", which defaults to the value of " (tt "(current-output-port)") "."))
(def (sig (procedure "(php-s11n-read [PORT])" (id php-s11n-read))) (p "Reads a serialized PHP literal from " (tt "PORT") " and returns it as a Scheme value. " (tt "PORT") " defaults to the value of " (tt "(current-input-port)") "."))
(def (sig (procedure "(php-s11n-read-null PORT)" (id php-s11n-read-null))) (p "Reads a serialized PHP " (tt "NULL") " literal from " (tt "PORT") ", returning " (tt "(void)") "."))
(def (sig (procedure "(php-s11n-read-boolean PORT)" (id php-s11n-read-boolean))) (p "Reads a serialized PHP boolean literal from " (tt "PORT") ", returning " (tt "#t") " or " (tt "#f") "."))
(def (sig (procedure "(php-s11n-read-integer PORT)" (id php-s11n-read-integer))) (p "Reads a serialized PHP integer literal from " (tt "PORT") ", returning a Scheme integer. The string representation of the integer is converted to a number using " (tt "string->number") "."))
(def (sig (procedure "(php-s11n-read-float PORT)" (id php-s11n-read-float))) (p "Reads a serialized PHP float literal from " (tt "PORT") ", returning a Scheme flonum or the value " (tt "+nan") ". The string representation of the integer is converted to a number using " (tt "string->number") "."))
(def (sig (procedure "(php-s11n-read-string PORT)" (id php-s11n-read-string))) (p "Reads a serialized PHP string literal from " (tt "PORT") ", returning a Scheme string."))
(def (sig (procedure "(php-s11n-read-array PORT)" (id php-s11n-read-array))) (p "Reads a serialized PHP array from " (tt "PORT") ", returning either a Scheme vector or association list."))
(def (sig (procedure "(php-s11n-read-array/alist PORT)" (id php-s11n-read-array/alist))) (p "Reads a serialized PHP associative array from " (tt "PORT") ", returning a Scheme association list."))
(def (sig (procedure "(php-s11n-read-array/hash-table PORT)" (id php-s11n-read-array/hash-table))) (p "Reads a serialized PHP associative array from " (tt "PORT") ", returning a " (link "http://srfi.schemers.org/srfi-69/" "SRFI-69") " hash table object."))
(def (sig (procedure "(php-s11n-read-object PORT)" (id php-s11n-read-object))) (p "Reads a serialized PHP object from " (tt "PORT") ", raising an error. Use the parameter " (tt "php-s11n-object-reader") " to override this functionality if you need to unserialize PHP object types."))
