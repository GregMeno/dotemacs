(index ("eggdoc:transform" 0) ("eggdoc->html" 0) ("eggdoc:make-stylesheet" 987) ("eggdoc:make-html-stylesheet" 1800) ("eggdoc->html/really" 1944) ("eggdoc:doctype" 2188) ("eggdoc:css" 2377) ("eggdoc:warnings" 2736) ("eggdoc:make-defsig" 2951) ("eggdoc:default-stylesheet-maker" 3524) ("eggdoc:default-transformer" 3755) ("eggdoc:result" 3993) ("eggdoc:derive-egg-name" 4341))
(def (sig (procedure "(eggdoc:transform DOC [STYLESHEET])" (id eggdoc:transform)) (procedure "(eggdoc->html DOC [STYLESHEET])" (id eggdoc->html))) (p "Transform the SXML document " (tt "DOC") " using the optional SXSLT stylesheet " (tt "STYLESHEET") ".  If not specified, the built-in stylesheet will be used, which is also accessible with " (tt "(eggdoc:make-stylesheet)") ".  Transformation output is displayed to " (tt "current-output-port") ".  Also returns the parse result as an alist (see " (tt "eggdoc:result") ").") (p "This is a generic transformer which by default outputs HTML, but can be overridden by other eggs (such as " (int-link "eggdoc-svnwiki") ") to output other formats.  By default, " (tt "eggdoc:transformer") " will invoke " (tt "eggdoc->html/really") ".") (p (tt "eggdoc->html") " is a deprecated alias to " (tt "eggdoc:transform") " and historically was the entry point to eggdoc.  The name is a misnomer, as it can be overridden to generate other formats."))
(def (sig (procedure "(eggdoc:make-stylesheet DOC)" (id eggdoc:make-stylesheet))) (p "Returns the default SXSLT stylesheet.  This is a procedure because the stylesheet is built dynamically using the contents of the SXML document " (tt "DOC") ".  For example, the value of the (name) tag is retrieved at build time and inserted in the header and the usage information.") (p "You can append to or modify this stylesheet and then pass it to " (tt "eggdoc->html") ".  This is done in doctype's eggdoc to provide a new tag, (strings), which makes the SXML much cleaner.") (p "This procedure invokes " (tt "eggdoc:make-html-stylesheet") " by default. However, it may be overridden by other eggs to return other stylesheet formats; for example, " (int-link "eggdoc-svnwiki") " may return an SXML->svnwiki stylesheet."))
(def (sig (procedure "(eggdoc:make-html-stylesheet DOC)" (id eggdoc:make-html-stylesheet))) (p "Returns the default SXML to HTML stylesheet."))
(def (sig (procedure "(eggdoc->html/really DOC)" (id eggdoc->html/really))) (p "Transform eggdoc to HTML using " (tt "eggdoc:make-html-stylesheet") ".  This procedure ensures you will get HTML output regardless of any transformer overrides."))
(def (sig (parameter "eggdoc:doctype" (id eggdoc:doctype))) (p "The DOCTYPE for this document, typically as defined in the doctype extension.  This defaults to doctype:xhtml-1.0-strict."))
(def (sig (parameter "eggdoc:css" (id eggdoc:css))) (p "CSS text inserted verbatim between the document's <style> tags.  This must be <!-- wrapped in HTML comments -->.  The default is quite reasonable.") (p "If you wish to source a CSS file instead of inserting the text directly, you can override the eggdoc-style tag in the default stylesheet to do so."))
(def (sig (parameter "(eggdoc:warnings BOOL)" (id eggdoc:warnings))) (p "If " (tt "#t") ", warn on transformation errors.  If " (tt "#f") ", transformation error output is suppressed.  Defaults to " (tt "#t") "."))
(def (sig (procedure "(eggdoc:make-defsig TAG SIG . [BODY])" (id eggdoc:make-defsig))) (p "Use this procedure inside a stylesheet to generate a new signature tag, just like " (tt "procedure") " or " (tt "macro") ".  It expands to a " (tt "(definition (signatures (signature ...)))") " expression.  For example,") (pre "(eggdoc->html doc `( ,@(eggdoc:make-stylesheet doc)\n                     (constant *macro* . ,eggdoc:make-defsig)\n                     (method   *macro* . ,eggdoc:make-defsig) ))") (p "will create new " (tt "constant") " and " (tt "method") " tags."))
(def (sig (parameter "eggdoc:default-stylesheet-maker" (id eggdoc:default-stylesheet-maker))) (p "The default stylesheet creator, invoked by " (tt "eggdoc:make-stylesheet") ". Defaults to " (tt "eggdoc:make-html-stylesheet") "."))
(def (sig (parameter "eggdoc:default-transformer" (id eggdoc:default-transformer))) (p "The default output transformer, invoked by " (tt "eggdoc:transform") " (and " (tt "eggdoc->html") ").  Defaults to " (tt "eggdoc->html/really") "."))
(def (sig (parameter "eggdoc:result" (id eggdoc:result))) (p "An alist containing the parse result for the last parse. The same value is returned from the eggdoc transformer, but some eggdoc scripts discard it.") (p "The only key currently defined is " (tt "name") ", which contains the egg name as derived by " (tt "eggdoc:derive-egg-name") "."))
(def (sig (procedure "(eggdoc:derive-egg-name DOC)" (id eggdoc:derive-egg-name))) (p "Get egg name from DOC from the " (tt "name") " element.  Implicitly adds a " (tt "(name NAME)") " association to " (tt "eggdoc:results") "."))
