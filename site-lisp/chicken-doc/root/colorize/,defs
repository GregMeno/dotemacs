(index ("coloring-type-names" 0) ("coloring-type-exists?" 314) ("html-colorize" 700))
(def (sig (procedure "(coloring-type-names)" (id coloring-type-names))) (p "Returns an alist of supported coloring types (recognised languages). The keys of this list are simple symbols which encode the internal name of the colorizer, the values of this list are human-readable strings describing the language."))
(def (sig (procedure "(coloring-type-exists? name)" (id coloring-type-exists?))) (p "If you don't need to know the name of a coloring type, this is a faster way to check if a given coloring type exists.  " (tt "name") " is a symbol which encodes the internal name of the coloring type.  If the coloring type with that name exists, " (tt "#t") " is returned, " (tt "#f") " otherwise."))
(def (sig (procedure "(html-colorize coloring-type string)" (id html-colorize))) (p "Colorize the given " (tt "string") " with the named " (tt "coloring-type") ".") (highlight scheme "(use colorize)\n\n(html-colorize 'c \"int main(void) {\\n    return 1;\\n}\")\n => \"<span class=\\\"symbol\\\">int</span> main<span class=\\\"paren1\\\">(<span class=\\\"default\\\"><span class=\\\"symbol\\\">void</span></span>)</span> <span class=\\\"paren1\\\">{<span class=\\\"default\\\">\\n    <span class=\\\"symbol\\\">return</span> 1;\\n</span>}</span>\""))
