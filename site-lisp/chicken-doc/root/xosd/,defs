(index ("xosd:create" 0) ("xosd:destroy" 220) ("xosd:is-onscreen?" 315) ("xosd:wait-until-no-display" 446) ("xosd:hide" 585) ("xosd:show" 671) ("xosd:set-pos" 757) ("xosd:set-vertical-offset" 926) ("xosd:set-horizontal-offset" 1128) ("xosd:set-align" 1334) ("xosd:set-shadow-offset" 1502) ("xosd:set-outline-offset" 1671) ("xosd:set-timeout" 1807) ("xosd:set-font" 1921) ("xosd:set-colour" 2103) ("xosd:set-outline-colour" 2278) ("xosd:set-shadow-colour" 2413) ("xosd:get-colour" 2538) ("xosd:scroll" 2727) ("xosd:get-number-lines" 2845) ("xosd:set-bar-length" 2975) ("xosd:display" 3109))
(def (sig (procedure "(xosd:create NUMBER-OF-LINES)" (id xosd:create))) (p "Creates and returns an XOSD window or #f on failure. " (tt "NUMBER-OF-LINES") " specifies the maximum number of lines that can be displayed."))
(def (sig (procedure "(xosd:destroy OSD)" (id xosd:destroy))) (p "Destroys the XOSD window."))
(def (sig (procedure "(xosd:is-onscreen? OSD)" (id xosd:is-onscreen?))) (p "Returns true, if an XOSD window is currently shown."))
(def (sig (procedure "(xosd:wait-until-no-display OSD)" (id xosd:wait-until-no-display))) (p "Waits until the timeout has been reached."))
(def (sig (procedure "(xosd:hide OSD)" (id xosd:hide))) (p "Hides the XOSD window."))
(def (sig (procedure "(xosd:show OSD)" (id xosd:show))) (p "Shows the XOSD window."))
(def (sig (procedure "(xosd:set-pos OSD POSITION)" (id xosd:set-pos))) (p "Sets the position of the window. POSITION may be any of the symbols top, middle or bottom."))
(def (sig (procedure "(xosd:set-vertical-offset OSD OFFSET)" (id xosd:set-vertical-offset))) (p "Sets the offset in pixels the window should be placed, relative to the top (or bottom) of the screen."))
(def (sig (procedure "(xosd:set-horizontal-offset OSD OFFSET)" (id xosd:set-horizontal-offset))) (p "Sets the offset in pixels the window should be placed, relative to the left (or right) of the screen."))
(def (sig (procedure "(xosd:set-align OSD ALIGN)" (id xosd:set-align))) (p "Sets the alignment of the window. ALIGN may be any of the symbols left, center or right."))
(def (sig (procedure "(xosd:set-shadow-offset OSD OFFSET)" (id xosd:set-shadow-offset))) (p "Sets the offset to the bottom-right of the shadow underneath the window."))
(def (sig (procedure "(xosd:set-outline-offset OSD ALIGN)" (id xosd:set-outline-offset))) (p "Sets the offset of the window-outline."))
(def (sig (procedure "(xosd:set-timeout OSD TIMEOUT)" (id xosd:set-timeout))) (p "Sets the timeout in seconds."))
(def (sig (procedure "(xosd:set-font OSD FONT)" (id xosd:set-font))) (p "Sets the font with which text should be displayed. FONT should be a string containing a valid X fontname."))
(def (sig (procedure "(xosd:set-colour OSD COLOR)" (id xosd:set-colour))) (p "Sets the color of the displayed text. COLOR should be string containing a valid X color name."))
(def (sig (procedure "(xosd:set-outline-colour OSD COLOR)" (id xosd:set-outline-colour))) (p "Sets the color of the window outline."))
(def (sig (procedure "(xosd:set-shadow-colour OSD COLOR)" (id xosd:set-shadow-colour))) (p "Sets the color of the shadow."))
(def (sig (procedure "(xosd:get-colour OSD)" (id xosd:get-colour))) (p "Returns the red-, green- and blue parts of the currently selected text color as three values between 0 and 65535."))
(def (sig (procedure "(xosd:scroll OSD LINES)" (id xosd:scroll))) (p "Scrolls the text by a given number of lines."))
(def (sig (procedure "(xosd:get-number-lines OSD)" (id xosd:get-number-lines))) (p "Returns the currently set number of lines."))
(def (sig (procedure "(xosd:set-bar-length OSD N)" (id xosd:set-bar-length))) (p "Sets the length of the percentage bar or slider."))
(def (sig (procedure "(xosd:display OSD LINE [MODE] VALUE)" (id xosd:display))) (p "Shows VALUE in the OSD window in the given line. MODE should be one of the symbols string, percentage or slider. If MODE is omitted, it defaults to percentage if VALUE is an integer, or to string otherwise."))
