((section 3 "Introduction" (p "This egg provides access to the unix system logger using the syslog-api.")) (section 3 "Examples" (highlight scheme "(use syslog)\n(syslog prio/notice \"This is my notice. Hello ~A\" \"world\")")) (section 3 "Authors" (p (int-link "David Krentzlin"))) (section 3 "License" (pre " Copyright (c) <2009> David Krentzlin <david@lisp-unleashed.de>\n  \n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n  OTHER DEALINGS IN THE SOFTWARE.")) (section 3 "Requirements" (p "This egg does only work on unix-like os's that have the syslog-functions available.")) (section 3 "Documentation" (def (sig (procedure "(syslog priority fmt . args)" (id syslog))) (p "Write a message to the syslogdaemon with the given priority. See " (b "priorities") " for a list of provided priority-constants.")) (def (sig (procedure "(openlog identity options facility)" (id openlog))) (p "Open a connection to the system logger. Identity is prepended to every message. The option-argument specify flags which control the operation of openlog and subsequent calls to syslog. See " (b "options") " for a list of provided option-constants. Options can be or'ed together. Facility sets the facility the logmessages will have. See " (b "facilities") " for a list of provided facilities. The use of openlog is optional. You can use syslog right away without calling openlog.")) (def (sig (procedure "(closelog)" (id closelog))) (p "Closes the connection to the system logger.")) (def (sig (procedure "(setlogmask maskpriority)" (id setlogmask))) (p "This procedure sets the logmask for the calling process and returns the old logmask. You can use log-up-to to log upto a specified priority.")) (def (sig (procedure "(log-up-to priority)" (id log-up-to))) (p "Returns a logmask that can be passed to setlogmask.")) (def (sig (procedure "(log-mask priority)" (id log-mask)))) (section 4 "Compatibility Notes" (p "Solaris currently lacks the syslog,ftp and authpriv facilities. Those are mapped to other facilities like so:") (pre "facility/authpriv => facility/auth\nfacility/syslog   => facility/daemon\nfacility/ftp      => facility/daemon")) (section 4 "Priorities/Levels" (ul (li "prio/info   ") (li "prio/emerg ") (li "prio/alert ") (li "prio/crit") (li "prio/err ") (li "prio/warning") (li "prio/notice ") (li "prio/debug "))) (section 4 "Options for openlog" (ul (li "opt/cons ") (li "opt/ndelay ") (li "opt/perror") (li "opt/pid"))) (section 4 "Facilities" (ul (li "facility/auth") (li "facility/cron") (li "facility/daemon") (li "facility/kern") (li "facility/lpr ") (li "facility/mail") (li "facility/news") (li "facility/user") (li "facility/uucp ") (li "facility/local0") (li "facility/local1") (li "facility/local2") (li "facility/local3") (li "facility/local4") (li "facility/local5") (li "facility/local6") (li "facility/local7") (li "facility/authpriv") (li "facility/syslog") (li "facility/ftp")))) (section 3 "Versionhistory"))