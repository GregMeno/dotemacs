(index ("graph-find-dominators-quickly!" 0) ("graph-find-dominators-slowly!" 437))
(def (sig (procedure "graph-find-dominators-quickly!:: G -> UNDEFINED" (id graph-find-dominators-quickly!))) (p "Computes the dominator tree of the given rooted, directed graph. When done, the meta-data field of each node will contain its immediate dominator. It assumes that the meta-data slot for each node contains a list, and modifies the car of that list. Requires that the list initially contain " (tt "#f") " as its car value."))
(def (sig (procedure "graph-find-dominators-slowly!:: G -> UNDEFINED" (id graph-find-dominators-slowly!))) (p "The fast dominator algorithm is difficult to prove correct, so this procedure is provided in order to check its results.  The slow algorithm, which runs in time " (tt "O(|E||V|)") ", is adapted from Aho and Ullman, " (i "The Theory of Parsing, Translation, and Compiling") ", Prentice-Hall, 1973, p. 916."))
