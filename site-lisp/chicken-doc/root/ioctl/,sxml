((tags "egg") (section 2 "Description" (p "An interface to the ioctl(2) system call.") (p "ioctl(2) provides an interface to the operating system terminal drivers (or more commonly these days to ptys (pseudo-terminals)). ioctl is very low-level - most aspects of the terminal can be controlled with the higher-level termios(4), available in Chicken as the even higher-level stty egg.")) (section 2 "Procedures" (def (sig (procedure "(ioctl-winsize [<port-or-fileno>])" (id ioctl-winsize))) (p "Returns a list of the form (<num-rows> <num-columns>) for the given port or file descriptor, defaulting to current-output-port.")) (def (sig (procedure "(ioctl <port-or-fileno> <request> [<args> ...])" (id ioctl))) (p "Makes the given ioctl request with any arguments provided.  The following requests are available:") (ul (li "TIOCSETD int *ldisc change the line discipline:" (ul (li "TTYDISC     termios interactive line discipline") (li "TABLDISC    tablet line discipline") (li "SLIPDISC    serial IP line discipline") (li "PPPDISC     PPP line discipline"))) (li "TIOCGETD int *ldisc return the current line discipline") (li "TIOCSBRK set the terminal into BREAK condition") (li "TIOCCBRK clear the terminal BREAK condition") (li "TIOCSDTR assert data terminal ready") (li "TIOCCDTR clear data terminal ready") (li "TIOCGPGRP int *tpgrp return the terminal's process group") (li "TIOCSPGRP int *tpgrp associate the terminal's process group") (li "TIOCGETA struct termios *term get the terminal's termios attributes") (li "TIOCSETA struct termios *term set the terminal's termios attributes") (li "TIOCSETAW struct termios *term set the termios attrs after any output completes") (li "TIOCSETAF struct termios *term after any output completes, clear input and set termios attrs") (li "TIOCOUTQ int *num current number of characters in the output queue") (li "TIOCSTI char *cp manually send a character to the terminal") (li "TIOCSTOP stop output (like typing ^S)") (li "TIOCSTART start output (like typing ^Q)") (li "TIOCSCTTY make this the controlling terminal for the process") (li "TIOCDRAIN wait until all output is drained") (li "TIOCEXCL set exclusive use on the terminal") (li "TIOCNXCL clear exclusive use of the terminal") (li "TIOCFLUSH int *what clear input/output if `what' has FREAD/FWRITE set") (li "TIOCGWINSZ struct winsize *ws get the winsize information") (li "TIOCSWINSZ struct winsize *ws set the winsize information") (li "TIOCCONS int *on redirect kernel console messages") (li "TIOCMSET int *state set the modem state bit flags according to the following:" (ul (li "TIOCM_LE   Line Enable") (li "TIOCM_DTR  Data Terminal Ready") (li "TIOCM_RTS  Request To Send") (li "TIOCM_ST   Secondary Transmit") (li "TIOCM_SR   Secondary Receive") (li "TIOCM_CTS  Clear To Send") (li "TIOCM_CAR  Carrier Detect") (li "TIOCM_CD   Carrier Detect (synonym)") (li "TIOCM_RNG  Ring Indication") (li "TIOCM_RI   Ring Indication (synonym)") (li "TIOCM_DSR  Data Set Ready"))) (li "TIOCMGET int *state get the modem state bit flags") (li "TIOCMBIS int *state add modem state bit flags, OR-ing in the new states") (li "TIOCMBIC int *state clear modem state bit flags")) (p "The struct winsize *ws arguments use the winsize record:") (pre "   make-winsize free-winsize\n   winsize-row winsize-col\n   winsize-row-set! winsize-col-set!") (p "The struct termios *term arguments use the term-attrs record from the stty egg.") (p "The integer pointer arguments can be handled with pointers from the lolevel extension."))) (section 2 "Author" (p (int-link "Alex Shinn"))) (section 2 "License" (p "BSD")) (section 2 "History" (dl (dt "1.0") (dd "Initial release"))))