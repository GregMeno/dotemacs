((tags "egg") (section 2 "chicken-doc-admin" (p "chicken-doc-admin is a tool for generating and maintaining Chicken documentation for the " (int-link "chicken-doc") " egg.") (toc) (section 3 "Overview" (p (int-link "chicken-doc-admin") " provides facilities to create and modify a Chicken documentation repository for " (int-link "chicken-doc") ".  It includes a command-line tool to convert egg documentation and manual pages from the Chicken wiki for use with " (int-link "chicken-doc") ".  It also provides an API for repository manipulation.") (p "The typical mode of using " (int-link "chicken-doc-admin") " is to check out a copy of the wiki using Subversion, then run the " (int-link "chicken-doc-admin") " command against the copy's egg and man directories.  Optionally, process eggdocs by running " (int-link "chicken-doc-admin") " against an egg repository checkout. Repeat when either is updated; only changed files will be reexamined.")) (section 3 "Quick start" (p "The default repository location is in the Chicken install tree and may not be writable by your user.  If so, either use " (tt "sudo") " or set an alternate writable location with:") (pre "$ export CHICKEN_DOC_REPOSITORY=/path/to/some/writable/directory") (p "Initialize the repository if this is your first time:") (pre "$ chicken-doc-admin -i") (p "If you only want to process the manual pages, you can use the locally-installed manual in " (tt "(chicken-home)/doc/manual") ":") (pre "$ chicken-doc-admin -m `csi -p \"(chicken-home)\"`/doc/manual") (p "Otherwise, download and process the wiki documentation:") (pre "$ svn co --username anonymous --password \"\" \\\n     http://code.call-cc.org/svn/chicken-eggs/wiki\n$ chicken-doc-admin -m wiki/man/4\n$ chicken-doc-admin -e wiki/eggref/4") (p "Then download the egg repository and process any eggdocs:") (ul (li (b "Warning") ": eggdocs are executable Scheme code, so if you are concerned about untrusted code, then skip this step or do not run it as root.  This risk is reasonably low because anonymous uploads are not allowed.")) (pre "$ svn co --username anonymous --password \"\" \\\n     http://code.call-cc.org/svn/chicken-eggs/release/4 eggs\n$ chicken-doc-admin -t eggdoc -e eggs")) (section 3 "Upgrading" (p "After an upgrade of the egg, if you get a message informing you that the repository version is invalid, you will need to delete and recreate your repository.  For example:") (pre "$ chicken-doc-admin -D\n$ chicken-doc-admin -i\n$ chicken-doc-admin -m ...\n$ chicken-doc-admin -e ...")) (section 3 "Command-line" (pre "$ chicken-doc-admin COMMAND") (pre "  -l           list repository information") (p "Print some information about the repository, such as its location and version.") (pre "  -i           initialize repository non-destructively") (p "Initialize the repository in the current default location or as overridden by " (tt "CHICKEN_DOC_REPOSITORY") ".  The directory will be created if it does not exist.  This command must be run before any documentation can be processed.  You should usually initialize an empty directory; initializing a populated directory won't delete anything, and may confuse us.") (pre "  -t type      document type") (p "Set the source document type, which may be " (tt "eggdoc") " or " (tt "svnwiki") ", defaulting to " (tt "svnwiki") ".  This option can be used before -e, -E, -m, -M.") (p "To process type " (tt "eggdoc") ", you must install the " (tt "eggdoc-svnwiki") " extension.") (pre "  -e dir       process egg directory DIR") (p "Process a copy of egg directory DIR, adding each egg documentation page to a node at toplevel and the identifiers contained in the page to that node's children.  Egg names are displayed as they are processed.") (ul (li "For " (b "svnwiki") " document types, directory is typically " (tt "/path/to/wiki/eggref/4") ".  The node name will be that of the file's basename, so file " (tt "eggref/4/9p") " becomes node " (tt "9p") ".") (li "For " (b "eggdoc") " types, directory is typically " (tt "/path/to/checkout/of/egg/repo") ", which is scanned for .meta files containing (eggdoc) attributes.  The node name is taken from the eggdoc's (name) attribute.")) (p "The timestamp of the source file is stored in each node, and files which have not changed since they were last processed are skipped.  Use " (tt "-f") " to disregard these timestamps and force reprocessing.") (pre "  -m dir       process svnwiki manual directory DIR") (p "Process a copy of svnwiki Chicken manual directory DIR (usually " (tt "/path/to/wiki/man/4") ").  Adds unit documentation to nodes at toplevel (Unit posix -> posix) and Chicken core documentation to nodes under toplevel node chicken (Parameters -> chicken parameters).") (p "A copy of the manual is usually installed in `(chicken-home)` under `doc/manual` -- for example, `/usr/local/share/chicken/doc/manual` -- and you can use this copy instead of checking it out from SVN.") (p (tt "chicken-doc-admin") " internally maps each manual page to a node path, based on its filename.") (pre "  -E file [path...]     process egg file FILE") (p "Process an individual egg file FILE as in -e.  The resulting node path is usually determined from context, but you may set it manually with PATH.") (p "FILE may reside anywhere on disk, not just in a repository checkout.") (pre "  -M file [path...]     process svnwiki man file FILE") (p "Process an individual svnwiki manual page FILE as in -m.  The node name is determined by an internal map of filenames to node paths. Alternatively, you can set it directly with PATH.") (pre "  -r           regenerate indices") (p "Regenerate documentation indices; at the moment, this is just one index, the node -> path search map.  Indexing is done automatically, so there is no need to use this option unless your index is somehow broken.") (pre "  -f           force processing (ignore timestamp checks)") (p "The timestamp of the source file is stored in each node, and normally files which have not changed since they were last processed are skipped.  Use " (tt "-f") " to disregard these timestamps and force reprocessing.  This option can be used before " (tt "-e") ", " (tt "-m") ", " (tt "-E") " and " (tt "-M") ", which all consider stored timestamps by default.") (pre "  -d path      delete node path recursively") (p "Delete node path PATH and everything under it.  Useful for removing, for example, an entire egg from the repository.") (p (b "WARNING") ": If you do not provide a path, the root path () is used, which will delete the contents of the entire repository and leave a clean repository in its place.") (pre "  -D           destroy repository") (p "Recursively deletes the repository base directory.  You must use " (tt "-i") " to recreate the repository.")) (section 3 "Repository" (p "The repository layout produced by chicken-doc-admin's automatic egg and man parser is detailed in the documentation for the " (int-link "chicken-doc") " egg.") (p "To recap, documentation for each egg and unit is placed in a toplevel node named after that egg or unit, with procedure, macro, etc. identifiers for that unit as the node's children.  Chicken core man pages not corresponding to a particular unit are placed individually under the \"chicken\" toplevel node; for example, " (int-link "Non-standard macros and special forms") " resides under the path " (tt "(chicken macros)") ".") (p "As with " (int-link "chicken-doc") ", you can override the repository location by setting an environment variable:") (pre "export CHICKEN_DOC_REPOSITORY=/path/to/repository") (p "This is useful for testing and also if the default location, which is located in " (tt "(chicken-home)") ", is not writable by you.  You can verify the current repository location with " (tt "chicken-doc-admin -l") ".") (section 4 "Low-level repository structure" (p "This structure is subject to change.") (pre "|-- .chicken-doc-repo    Repository magic file; contains repository info\n|-- id.idx               Alist mapping node identifiers to paths\n|-- lock                 Lock file to prevent write conflicts\n|-- root/                Documentation root node ()\n    |-- 9p/              Documentation node (9p)\n    |    |- ,meta         (9p) metadata alist (signature \"9p egg\", type 'egg)\n    |    |- ,sxml         (9p) sxml document\n    |    |- ,defs         (9p) definitions (index ...) (def ...) (def ...)\n    |\n    |-- foreign/         Documentation node (foreign)\n         |- ,meta         (foreign) metadata alist + sxml document\n         |- access/      Documentation node (foreign access)\n            |- ,meta      (foreign access) metadata\n            |- ,sxml      (foreign access) sxml document\n            |- ,defs      (foreign access) definitions,\n                             e.g. for (foreign access foreign-code)") (p "Certain characters are %-escaped in filenames, such as / and period.") (p "When the " (tt ",sxml") " document is under 3KB, it is packed into the " (tt ",meta") " file.") (p (tt ",defs") " nodes are virtual nodes containing definition sexprs extracted from the parent sxml document at parse time, plus an index.  They cannot be created, modified or destroyed except via their containing document, but are otherwise accessed as regular nodes.  " (tt ",defs") " nodes first appeared in version 0.4.0; prior to that, they were \"real\" nodes and one directory was created per definition.") (p "Each node contains a timestamp corresponding to that of the source file."))) (section 3 "Proper wiki documentation" (p (i "This section is a work in progress.")) (section 4 "The short and skinny" (ul (li "Use svnwiki type tags (procedure, macro) around all identifiers to be documented.  See " (int-link "wiki-syntax-chicken" "Chicken-specific wiki syntax") ".") (li "Place related tagged identifiers on consecutive, non-blank lines; the text description below is then used for all of them.  eggdocs must use the proper grouping form, described below.") (li "Ensure all identifier signatures can be read with a call to (read). Don't use characters such as " (tt "|") " (pipe).") (li "Ensure open and close tags for bold, italic, links, code and identifiers are located on the same line."))) (section 4 "svnwiki identifier type tags" (p "Each identifier is assigned a type (such as 'procedure, 'macro) corresponding to svnwiki tags \"procedure\", \"macro\" etc.  It is also assigned a signature which is taken verbatim from the svnwiki tag content.  Finally, the identifier name also comes from the signature; the signature is parsed using " (tt "(read)") ", and the result may be a symbol (for example, a constant), or a list --- typically, a procedure or macro signature, in which case the first element of the list is used.  With rare exception, as when the signature contains an illegal character such as " (tt "|") " (pipe), this strategy works well.") (p "If a signature cannot be parsed as above, the definition is discarded. As a special exception, read syntax signatures are used verbatim, so that you can look up read syntax like " (tt "#u8") ".") (p "The currently recognized svnwiki tags are:") (pre "(define +identifier-tags+\n  (list \"procedure\" \"macro\" \"read\" \"parameter\"\n        \"record\" \"string\" \"class\" \"method\" \"constant\" \"setter\"))")) (section 4 "Identifier descriptions" (p "When creating an identifier description, the svnwiki parser takes all text from after the occurrence of the identifier tag up until the next section marker, or the next identifier tag.  This follows the informal standard for Chicken documentation on the wiki, and is a natural way to separate descriptions logically.  Some points to note:") (ul (li "The description stops even if the section marker denotes a nested section.  This works well in general, although there are a few eggs which do contain important identifier info in nested sections. To get this information, you have to read the full documentation, or rearrange the structure.") (li "If several identifier signatures occur on consecutive lines, without any blank lines between them, they are considered part of a \"group\" of identifiers.  The following text description then applies to every identifier in the group.  Again, this corresponds to common practice on the wiki.") (li "If you look up one identifier in a group, they will all appear, along with the single text description."))) (section 4 "Eggdoc notes" (p "Identifier groups in eggdocs use the somewhat verbose form") (pre "(definition\n  (signatures\n   (signature \"procedure\" \"(foo bar)\")\n   (signature \"procedure\" \"(baz bat)\")\n   (signature \"macro\"     \"(quux phlox)\"))\n  (p \"This describes foo, baz and quux.\"))") (p "Separating the definitions like " (tt "(procedure ...) (procedure ...)") " instead defines independent, non-grouped procedures.  Nesting " (tt "(procedure ... (procedure ...))") " is illegal."))) (section 3 "API" (p "To be documented.")) (section 3 "About this egg" (section 4 "Author" (p "Jim Ursetto")) (section 4 "Version history" (dl (dt "0.4.1") (dd "Ensure old definitions are removed from index when updating a node") (dt "0.4.0") (dd "Repository version 3; dedicated ,defs nodes (saves 80% or more space)") (dt "0.3.12") (dd "Eliminate manual reindexing; pack page ,sxml into ,meta when < 3072 bytes") (dt "0.3.11") (dd "Read syntax signatures are used verbatim (requires Chicken 4.4.2 or later)") (dt "0.3.9") (dd "process only new or modified nodes; display statistics") (dt "0.3.7") (dd "pack definition ,sxml into ,meta when < 3072 bytes; saves 20+MB") (dt "0.3.4") (dd "shared repository cache") (dt "0.3.0") (dd "store pages as SXML; improve parse; repo version 2") (dt "0.2.2") (dd "Improve manpage handling") (dt "0.2") (dd "Support eggdoc") (dt "0.1.1") (dd "Initial release"))) (section 4 "License" (p "Copyright (c) 2010 Jim Ursetto.  License: 3-clause BSD.")))))