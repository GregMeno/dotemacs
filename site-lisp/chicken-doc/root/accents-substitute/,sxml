((section 2 "accents-substitute" (section 3 "Description" (p "Substitutes accented characters (Latin1 and UTF-8) in strings by either non accented ASCII characters or HTML entities.") (p "The current supported accented characters for both latin1 and UTF-8 are: ã, Ã, á, Á, â, Â, à, À, ä, Ä, é, É, ê, Ê, è, È, ë, Ë, í, Í, î, Î, ì, Ì, ï, Ï, õ, Õ, ó, Ó, ô, Ô, ò, Ò, ö, Ö, ú, Ú, û, Û, ù, Ù, ü, Ü, ç and Ç.") (p "The following characters are supported in UTF-8 only: İ, ı, Ğ, ğ, Ş, ş.")) (section 3 "Author" (p (link "http://wiki.call-cc.org/users/mario-domenech-goulart" "Mario Domenech Goulart"))) (section 3 "Requirements" (p "None")) (section 3 "Usage" (p "This extensions provides two modules: " (tt "accents-substitute-latin1") " and " (tt "accents-substitute-utf8") ".") (p "If you want to replace accented characters in Latin-1 strings, use:") (highlight scheme "(require-extension accents-substitute-latin1)\n\n(accents-substitute \"ação\")\n=> \"acao\"\n\n(accents-substitute \"ação\" mode: 'html)\n=> \"a&ccedil;&atilde;o\"") (p "If you want to replace accented characters in UTF-8 strings, use:") (highlight scheme "(require-extension accents-substitute-utf8)\n\n(accents-substitute \"ação\")\n=> \"acao\"\n\n(accents-substitute \"ação\" mode: 'html)\n=> \"a&ccedil;&atilde;o\"") (p "You can use " (tt "accents-substitute") " from both modules in the same program by renaming the procedures on importing.")) (section 3 "Procedure" (def (sig (procedure "(accents-substitute str #!key mode)" (id accents-substitute))) (p "Substitute accented characters in " (tt "str") " by non accented ASCII characters (if " (tt "mode") " is not given or is given as " (tt "'ascii") ") or by HTML entities (if mode is given as " (tt "'html") ")."))) (section 3 "Example" (p "Below you can see the code of a practical command line tool which uses " (tt "accents-substitute") ".") (p "Here's how to use it:") (pre "Usage: accents-substitute [ --encoding=<utf8|latin1> ] [ --mode=<ascii|html> ] [ input file ]\n\nDefault values:\n   mode: ascii\n   encoding: utf8") (p "Here's the code:") (highlight scheme "#!/bin/sh\n#| -*- scheme -*-\nexec csi -s $0 \"$@\"\n|#\n\n(use\n (rename\n  accents-substitute-latin1\n  (accents-substitute accents-substitute-latin1))\n (rename\n  accents-substitute-utf8\n  (accents-substitute accents-substitute-utf8)))\n\n(use posix regex (srfi 1 13))\n\n(define (command-line-argument option args)\n  ;; Return the argument associated to the command line option OPTION\n  ;; in ARGS or #f if OPTION is not found in ARGS or doesn't have any\n  ;; argument.\n  (let ((val (any (cut string-match (string-append option \"=(.*)\") <>) args)))\n    (and val (cadr val))))\n\n(define (usage #!optional exit-code)\n  (print \"Usage: \" (pathname-strip-directory (program-name))\n         \" [ --encoding=<utf8|latin1> ] [ --mode=<ascii|html> ] [ input file ]\")\n  (print \"\\nDefault values:\\n\"\n         \"    mode: ascii\\n\"\n         \"    encoding: utf8\")\n  (when exit-code (exit exit-code)))\n\n(let* ((args (command-line-arguments))\n       (mode (command-line-argument \"--mode\" args))\n       (encoding (command-line-argument \"--encoding\" args))\n       (paramless-args (remove (cut string-prefix? \"--\" <>) args))\n       (accents-substitute accents-substitute-utf8))\n\n  (when (or (member \"-h\" args) (member \"--help\" args))\n    (usage 0))\n\n  (when (and encoding (not (member encoding '(\"utf8\" \"latin1\"))))\n    (print \"'\" encoding \"' is not a valid encoding.\")\n    (exit 1))\n\n  (when (and mode (not (member mode '(\"ascii\" \"html\"))))\n    (print \"'\" mode \"' is not a valid mode.\")\n    (exit 1))\n\n  (when (equal? encoding \"latin1\")\n    (set! accents-substitute accents-substitute-latin1))\n\n  (let ((port (if (null? paramless-args)\n                  (current-input-port)\n                  (open-input-file (car paramless-args)))))\n    (let loop ()\n      (let ((line (read-line port)))\n        (unless (eof-object? line)\n          (print (accents-substitute line mode: (and mode (string->symbol mode))))\n          (loop))))\n    (unless (null? paramless-args)\n      (close-input-port port))))")) (section 3 "License" (p "BSD")) (section 3 "Version history" (dl (dt "0.3") (dd "Added UTF-8 support for turkish characters (İ, ı, Ğ, ğ, Ş, ş).  Thanks to Mehmet Köse.") (dt "0.2") (dd "Use pre compiled regexes for html mode (a lot faster).  Added " (int-link "regex") " requirement for compatibility with chickens >= 4.6.2.") (dt "0.1") (dd "Initial release")))))