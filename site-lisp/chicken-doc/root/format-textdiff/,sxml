((tags "egg") (section 2 "format-textdiff" (p "Output text diff scripts in different formats.") (toc)) (section 2 "Usage" (p "(require-extension format-textdiff)")) (section 2 "Documentation" (p "The format-textdiff library defines the " (tt "textdiff") " procedure, which produces a diff script for two SRFI-43 vectors that contain strings, and it provides a formatting procedure that can output the text diff hunks in several formats commonly supported by the Unix " (tt "diff(1)") " tool.") (section 3 "Procedures" (def (sig (procedure "textdiff:: TEXT1 TEXT2 [CONTEXT] -> (HUNK ... )" (id textdiff))) (p "text diff procedure;") (ul (li (tt "TEXT1") " and " (tt "TEXT2") " are two SRFI-43 vectors that contain strings;") (li (tt "CONTEXT") " is an optional number of context lines  to be provided with each operation in the diff script See the documentation for the " (int-link "npdiff.html" "npdiff egg") " for a detailed description of the " (tt "HUNK") " data type."))) (def (sig (procedure "make-format-textdiff:: TYPE -> FORMAT-PROC" (id make-format-textdiff))) (p "returns a hunk formatter procedure of the specified types; the following formats are  supported:") (table (@ (class "symbol-table")) (tr (td "'ed") (td "ed(1) script")) "\n" (tr (td "'normal") (td "normal diff format")) "\n" (tr (td "'rcs") (td "rcs(1) diff script")) "\n" (tr (td "'context") (td "context diff format"))) (p "Each hunk formatter procedure is of the form " (tt "LAMBDA OUT-PORT HUNK-LIST") ", except for the context formatter, which is of the form " (tt "LAMBDA OUT-PORT HUNK-LIST FNAME1 TSTAMP1 FNAME2 TSTAMP2") ", where the timestamp and filename arguments are strings. Please see the " (tt "diff(1)") " manual for a detailed description of each format.")) (def (sig (procedure "textdiff->sexp:: (HUNK ... ) -> (SEXP ...)" (id textdiff->sexp))) (p "converts a list of hunks to a list of s-expressions suitable for input to the " (tt "apply-patch") " procedure of the " (int-link "patch.html" "patch egg") ".")))) (section 2 "Examples" (pre "(require-extension npdiff)\n(require-extension format-textdiff)\n\n(define t1 (open-input-file \"file0\"))\n(define text1 (read-lines t1))\n(define t2 (open-input-file \"file1\"))\n(define text2 (read-lines t2))\n(define hunks (textdiff text1 text2 3))\n\n(define format make-format-textdiff)\n\n((format 'ed) (current-output-port) hunks)\n((format 'normal) (current-output-port) hunks)\n((format 'rcs) (current-output-port) hunks)\n((format 'context) (current-output-port) hunks \n \"file0\" \"Sun Jun  3 18:28:06 2007\" \n \"file1\" \"Sun Jun  3 18:28:06 2007\")\n\n(require-extension patch)\n\n(define sexp (textdiff->sexp hunks))\n(with-input-from-port (open-input-file \"file0\")\n  (lambda () (with-output-to-port (open-output-file \"file1.new\")\n       (lambda () (apply-patch sexp)))))")) (section 2 "About this egg" (section 3 "Author" (p (int-link "/users/ivan-raikov" "Ivan Raikov"))) (section 3 "Version history" (dl (dt "1.13") (dd "Fixed merging of remove/change hunks in context diff routine [bug reported by Daishi Kato]") (dt "1.11") (dd "Bug fixes in context format handling and improved test cases") (dt "1.9") (dd "Adjusted paths of test files in unit tests") (dt "1.8") (dd "Documentation converted to wiki format") (dt "1.7") (dd "Some improvements to the test suite") (dt "1.6") (dd "Ported to Chicken 4") (dt "1.5") (dd "Build script updated for better cross-platform compatibility") (dt "1.4") (dd "eggdoc documentation fix") (dt "1.3") (dd "License upgrade to GPL v3") (dt "1.2") (dd "Added license text to source files") (dt "1.1") (dd "Added procedure " (tt "textdiff->sexp") " [thanks to Felix for the suggestion]") (dt "1.0") (dd "Initial release"))) (section 3 "License" (pre "Copyright 2007-2010 Ivan Raikov. \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or (at\nyour option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nA full copy of the GPL license can be found at\n<http://www.gnu.org/licenses/>."))))