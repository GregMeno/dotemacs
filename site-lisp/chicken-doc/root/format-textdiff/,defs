(index ("textdiff" 0) ("make-format-textdiff" 458) ("textdiff->sexp" 1231))
(def (sig (procedure "textdiff:: TEXT1 TEXT2 [CONTEXT] -> (HUNK ... )" (id textdiff))) (p "text diff procedure;") (ul (li (tt "TEXT1") " and " (tt "TEXT2") " are two SRFI-43 vectors that contain strings;") (li (tt "CONTEXT") " is an optional number of context lines  to be provided with each operation in the diff script See the documentation for the " (int-link "npdiff.html" "npdiff egg") " for a detailed description of the " (tt "HUNK") " data type.")))
(def (sig (procedure "make-format-textdiff:: TYPE -> FORMAT-PROC" (id make-format-textdiff))) (p "returns a hunk formatter procedure of the specified types; the following formats are  supported:") (table (@ (class "symbol-table")) (tr (td "'ed") (td "ed(1) script")) "\n" (tr (td "'normal") (td "normal diff format")) "\n" (tr (td "'rcs") (td "rcs(1) diff script")) "\n" (tr (td "'context") (td "context diff format"))) (p "Each hunk formatter procedure is of the form " (tt "LAMBDA OUT-PORT HUNK-LIST") ", except for the context formatter, which is of the form " (tt "LAMBDA OUT-PORT HUNK-LIST FNAME1 TSTAMP1 FNAME2 TSTAMP2") ", where the timestamp and filename arguments are strings. Please see the " (tt "diff(1)") " manual for a detailed description of each format."))
(def (sig (procedure "textdiff->sexp:: (HUNK ... ) -> (SEXP ...)" (id textdiff->sexp))) (p "converts a list of hunks to a list of s-expressions suitable for input to the " (tt "apply-patch") " procedure of the " (int-link "patch.html" "patch egg") "."))
