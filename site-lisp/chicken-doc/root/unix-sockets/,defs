(index ("unix-listen" 0) ("unix-listener?" 285) ("unix-close" 456) ("unix-accept" 581) ("unix-accept-ready?" 876) ("unix-connect" 1094) ("unix-listener-fileno" 1313) ("unix-listener-path" 1488))
(def (sig (procedure "(unix-listen PATHNAME [BACKLOG])" (id unix-listen))) (p "Creates a socket listener object. " (tt "PATHNAME") " gives the name of the file that represents the connection. " (tt "BACKLOG") " specifies how many pending connections are allowed and defaults to 10."))
(def (sig (procedure "(unix-listener? X)" (id unix-listener?))) (p "Returns " (tt "#t") " if " (tt "X") " is a unix socket listener object, or " (tt "#f") " otherwise."))
(def (sig (procedure "(unix-close LISTENER)" (id unix-close))) (p "Closes the socket associated with the listener object."))
(def (sig (procedure "(unix-accept LISTENER)" (id unix-accept))) (p "Waits for a connection from a client and returns two values: an input- and output-port which can be used to communicate with the connecting process. Calling " (tt "unix-accept") " does not block other threads from running."))
(def (sig (procedure "(unix-accept-ready? LISTENER)" (id unix-accept-ready?))) (p "Returns " (tt "#t") " if a " (tt "unix-accept") " for this listener would not block the current thread, or " (tt "#f") " otherwise."))
(def (sig (procedure "(unix-connect PATHNAME)" (id unix-connect))) (p "Connects to the socket given in " (tt "PATHNAME") " and returns two values: an input- and output-port which allow communication with the server."))
(def (sig (procedure "(unix-listener-fileno LISTENER)" (id unix-listener-fileno))) (p "Returns the file-descriptor of the socket associated with the given listener object."))
(def (sig (procedure "(unix-listener-path LISTENER)" (id unix-listener-path))) (p "Returns the pathname of the socket associated with the given listener object."))
