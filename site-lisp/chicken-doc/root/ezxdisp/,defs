(index ("ezx-init" 0) ("ezx-quit" 159) ("ezx-redraw" 214) ("ezx-wipe" 273) ("ezx-wipe-layer" 328) ("ezx-sensebutton" 465) ("ezx-pushbutton" 643) ("ezx-point-2d" 1041) ("ezx-line-2d" 1114) ("ezx-lines-2d" 1199) ("ezx-poly-2d" 1289) ("ezx-rect-2d" 1499) ("ezx-fillrect-2d" 1584) ("ezx-circle-2d" 1671) ("ezx-fillcircle-2d" 1756) ("ezx-str-2d" 1843) ("ezx-set-light-3d" 1921) ("ezx-set-view-3d" 2001) ("ezx-c3d-to-2d" 2090) ("ezx-line-3d" 2223) ("ezx-str-3d" 2314) ("ezx-poly-3d" 2395) ("ezx-circle-3d" 2480) ("ezx-next-event" 2692) ("ezx-select-layer" 4594) ("ezx-raise-window" 4699) ("ezx-window-name" 4795) ("ezx-set-background" 4904) ("make-ezx-color" 5032))
(def (sig (procedure "(ezx-init SIZE_X SIZE_Y WINDOW_NAME)" (id ezx-init))) (p "This procedure returns a " (tt "EZX") " object all other procedures accept."))
(def (sig (procedure "(ezx-quit EZX)" (id ezx-quit))))
(def (sig (procedure "(ezx-redraw EZX)" (id ezx-redraw))))
(def (sig (procedure "(ezx-wipe EZX)" (id ezx-wipe))))
(def (sig (procedure "(ezx-wipe-layer EZX LAYER)" (id ezx-wipe-layer))) (p (tt "LAYER") " should be an exact integer between 0 and 8."))
(def (sig (procedure "(ezx-sensebutton EZX)" (id ezx-sensebutton))) (p "Returns the current pointer coordinates as three values: " (tt "BUTTON") ", " (tt "X") " and " (tt "Y")))
(def (sig (procedure "(ezx-pushbutton EZX)" (id ezx-pushbutton))) (p "Block until an event is received.  Returns three values: " (tt "BUTTON") ", " (tt "X") " and " (tt "Y")) (p "The BUTTON result is 1, 2 or 3 for the first, second and third mouse button, respectively. The button number is additionally bitwise OR'd with 8 if the shift key is pressed and with 16 if the control key is pressed."))
(def (sig (procedure "(ezx-point-2d EZX X Y COLOR)" (id ezx-point-2d))))
(def (sig (procedure "(ezx-line-2d EZX X0 Y0 X1 Y1 COLOR WIDTH)" (id ezx-line-2d))))
(def (sig (procedure "(ezx-lines-2d EZX POINTS NPOINTS COLOR WIDTH)" (id ezx-lines-2d))))
(def (sig (procedure "(ezx-poly-2d EZX POINTS NPOINTS COLOR)" (id ezx-poly-2d))) (p "The " (tt "POINTS") " argument should be an SRFI-4 " (tt "s32vector") " containing the X and Y coordinates of each point."))
(def (sig (procedure "(ezx-rect-2d EZX X0 Y0 X1 Y1 COLOR WIDTH)" (id ezx-rect-2d))))
(def (sig (procedure "(ezx-fillrect-2d EZX X0 Y0 X1 Y1 COLOR)" (id ezx-fillrect-2d))))
(def (sig (procedure "(ezx-circle-2d EZX X0 Y0 R COLOR WIDTH)" (id ezx-circle-2d))))
(def (sig (procedure "(ezx-fillcircle-2d EZX X0 Y0 R COLOR)" (id ezx-fillcircle-2d))))
(def (sig (procedure "(ezx-str-2d EZX X0 Y0 STRING COLOR)" (id ezx-str-2d))))
(def (sig (procedure "(ezx-set-light-3d EZX EX EY EZ)" (id ezx-set-light-3d))))
(def (sig (procedure "(ezx-set-view-3d EZX EX EY EZ VX VY VZ M)" (id ezx-set-view-3d))))
(def (sig (procedure "(ezx-c3d-to-2d EZX SX SY SZ)" (id ezx-c3d-to-2d))) (p "Returns two values, " (tt "DX") " and " (tt "DY") "."))
(def (sig (procedure "(ezx-line-3d EZX X0 Y0 Z0 X1 Y1 Z1 COLOR WIDTH)" (id ezx-line-3d))))
(def (sig (procedure "(ezx-str-3d EZX X0 Y0 Z0 STRING COLOR)" (id ezx-str-3d))))
(def (sig (procedure "(ezx-poly-3d EZX POINTS HX HY HZ N COLOR)" (id ezx-poly-3d))))
(def (sig (procedure "(ezx-circle-3d EZX X0 Y0 Z0 R COLOR)" (id ezx-circle-3d))) (p "The " (tt "POINTS") " argument should be a SRFI-4 " (tt "f64vector") " containing the X, Y and Z coordinates of each point."))
(def (sig (procedure "(ezx-next-event EZX)" (id ezx-next-event))) (p "Removes the next event from the event queue and returns the event-specific information.  If there is no event data in the event queue, this function blocks until the next event occurs. The procedure returns 5 values: the type of the event, the X- and Y-coordinates of the mouse pointer at the time of the event, the button- or keyboard-state mask and the button- or key-code of the event.") (p "The following variables contain the event-types that may occur:") (ul (li (tt "ezx:BUTTON-PRESS") " or " (tt "ezx:BUTTON-RELEASE")) (li (tt "ezx:KEY-PRESS") " or " (tt "ezx:KEY-RELEASE")) (li (tt "ezx:MOTION-NOTIFY")) (li (tt "ezx:CLOSE"))) (p "These button-codes are defined:") (table (tr (th "Code") (th "Button")) "\n" (tr (td "1") (td "left")) "\n" (tr (td "2") (td "middle")) "\n" (tr (td "3") (td "right")) "\n" (tr (td "4") (td "wheel up")) "\n" (tr (td "5") (td "wheel down"))) (p "State mask values that may be returned:") (table (tr (th "Mask") (th "State")) "\n" (tr (td "1") (td "shift key")) "\n" (tr (td "2") (td "control key")) "\n" (tr (td "4") (td "left button")) "\n" (tr (td "8") (td "middle button")) "\n" (tr (td "16") (td "right button"))) (p "For keyboard events, some special keys will return a platform independent keycode:") (table (tr (td "Home") (td "#xff50")) "\n" (tr (td "Left") (td "#xff51")) "\n" (tr (td "Up") (td "#xff52")) "\n" (tr (td "Right") (td "#xff53")) "\n" (tr (td "Down") (td "#xff54"))) (p "The result values will be undefined for events for which they are not used. This table summarizes what results are valid:") (table (tr (th "Event") (th "Results")) "\n" (tr (td "ezx:CLOSE") (td)) "\n" (tr (td "ezx:BUTTON-PRESS ezx:BUTTON-RELEASE") (td "x, y, state, k/b")) "\n" (tr (td "ezx:KEY-PRESS ezx:KEY-RELEASE") (td "x, y, state, k/b")) "\n" (tr (td "ezx:MOTION-NOTIFY") (td "x, y, state"))))
(def (sig (procedure "(ezx-select-layer EZX LAYER)" (id ezx-select-layer))) (p "Focuses on the layer."))
(def (sig (procedure "(ezx-raise-window EZX)" (id ezx-raise-window))) (p "Raises the window."))
(def (sig (procedure "(ezx-window-name EZX STRING)" (id ezx-window-name))) (p "Sets a name of the window."))
(def (sig (procedure "(ezx-set-background EZX COLOR)" (id ezx-set-background))) (p "Sets the background color of the window."))
(def (sig (procedure "(make-ezx-color R G B)" (id make-ezx-color))) (p "This procedure returns a \"color object\", which is internally encoded as a " (tt "f64vector") ". The red, green and blue components should be between 0 and 1."))
