(index ("make-random-test" 0) ("format-random-stats" 1303))
(def (sig (procedure "make-random-test:: [CAR CDR NULL?] -> (SEQ -> RANDOM-STATS)" (id make-random-test))) (p "This procedure creates a procedure that reads in a sequence of numerical values, and performs statistical tests to tests the randomness of the elements of the sequence.") (p "By default, the sequence is expected to be a list; however, if a different sequential data structure is used (e.g. a stream), the optional arguments " (tt "CAR, CDR, NULL?") " may be used to specify procedures that perform the corresponding operations on the input sequence.") (p "The returned procedure is of the form " (tt "SEQ -> RANDOM-STATS") ", where " (tt "SEQ") " is the sequence and the returned value is an alist with the following fields:") (dl (dt (tt "chisq")) (dd "the result of the Chi-Square test") (dt (tt "pochisq")) (dd "the calculated probability of the Chi-Square test") (dt (tt "mean")) (dd "the mean of the values in the input sequence</td></tr>") (dt (tt "min")) (dd "the minimum of the values in the input sequence</td></tr>") (dt (tt "max")) (dd "the maximum of the values in the input sequence</td></tr>") (dt (tt "montepi")) (dd "Monte Carlo value of pi") (dt (tt "scc")) (dd "the serial correlation coefficient")) (p "See the following section for explanation of the different fields."))
(def (sig (procedure "format-random-stats:: OUT * RANDOM-STATS -> UNDEFINED" (id format-random-stats))) (p "Given an output port, and the value returned by the random test procedure, this procedure outputs a human readable interpretation of the test results."))
