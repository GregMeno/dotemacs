(index ("message?" 0) ("message-envelope" 157) ("message-headers" 724) ("message-body" 1057) ("mbox-file->messages" 1332) ("mbox-file->messages/byte-blob-stream" 1606))
(def (sig (procedure "(message? X) => BOOL" (id message?))) (p "Returns " (tt "#t") " if the given argument is a message object, " (tt "#f") " otherwise."))
(def (sig (procedure "(message-envelope X) => ENVELOPE" (id message-envelope))) (p "Returns the envelope part of a message. The envelope is an s-expression of the following form:") (pre "((time-seconds R) [(ctime ...) | (abbrtime ...)] (address ADDRESS))") (p "The " (tt "time-seconds") " field contains the time when the message was received, in seconds since 1900. The " (tt "ctime") " or " (tt "abbrtime") " fields contain the components of the date/time string. The address fields is an s-expression of the form:") (pre " ((local-part STRING) (domain STRING))"))
(def (sig (procedure "(message-headers X) => (LAMBDA () => HEADERS)" (id message-headers))) (p "Returns the headers part of a message. This is a procedure of no arguments that when invoked, returns the parsed list of headers in an alist where the key is the header name (as a symbol), and the value is the parsed header contents."))
(def (sig (procedure "(message-body X) => (LAMBDA ([P]) => BODY)" (id message-body))) (p "Returns the body part of a message. This is a procedure of a single argument, that when invoked, uses the given argument procedure to parse the message body, and returns the result."))
(def (sig (procedure "(mbox-file->messages FILENAME) => MESSAGE LIST" (id mbox-file->messages))) (p "Given a filename, parses the given files as an mbox database, and returns a list of message objects. The contents of the message are represented as a list of characters."))
(def (sig (procedure "(mbox-file->messages/byte-blob-stream FILENAME) => MESSAGE LIST" (id mbox-file->messages/byte-blob-stream))) (p "Given a filename, parses the given files as an mbox database, and returns a list of message objects. The contents of the message are represented as a " (int-link "byte-blob-stream") " object."))
