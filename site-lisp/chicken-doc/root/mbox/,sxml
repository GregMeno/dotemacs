((tags "eggs") (toc) (section 2 "mbox" (section 3 "Description" (p "The " (tt "mbox") " library contains procedures for parsing of mbox database files, " (link "http://tools.ietf.org/html/rfc4155" "RFC 4155") ". It is intended to conform closely to the ABNF grammar in the RFC.")) (section 3 "Library Procedures" (section 4 "Message Predicates and Accessors" (p "The parsing procedures in this library return a list of message objects. The following procedures are available for manipulating the message objects:") (def (sig (procedure "(message? X) => BOOL" (id message?))) (p "Returns " (tt "#t") " if the given argument is a message object, " (tt "#f") " otherwise.")) (def (sig (procedure "(message-envelope X) => ENVELOPE" (id message-envelope))) (p "Returns the envelope part of a message. The envelope is an s-expression of the following form:") (pre "((time-seconds R) [(ctime ...) | (abbrtime ...)] (address ADDRESS))") (p "The " (tt "time-seconds") " field contains the time when the message was received, in seconds since 1900. The " (tt "ctime") " or " (tt "abbrtime") " fields contain the components of the date/time string. The address fields is an s-expression of the form:") (pre " ((local-part STRING) (domain STRING))")) (def (sig (procedure "(message-headers X) => (LAMBDA () => HEADERS)" (id message-headers))) (p "Returns the headers part of a message. This is a procedure of no arguments that when invoked, returns the parsed list of headers in an alist where the key is the header name (as a symbol), and the value is the parsed header contents.")) (def (sig (procedure "(message-body X) => (LAMBDA ([P]) => BODY)" (id message-body))) (p "Returns the body part of a message. This is a procedure of a single argument, that when invoked, uses the given argument procedure to parse the message body, and returns the result."))) (section 4 "Parsing Procedures" (def (sig (procedure "(mbox-file->messages FILENAME) => MESSAGE LIST" (id mbox-file->messages))) (p "Given a filename, parses the given files as an mbox database, and returns a list of message objects. The contents of the message are represented as a list of characters.")) (def (sig (procedure "(mbox-file->messages/byte-blob-stream FILENAME) => MESSAGE LIST" (id mbox-file->messages/byte-blob-stream))) (p "Given a filename, parses the given files as an mbox database, and returns a list of message objects. The contents of the message are represented as a " (int-link "byte-blob-stream") " object.")))) (section 3 "Requires" (ul (li (int-link "abnf")) (li (int-link "internet-message")) (li (int-link "internet-timestamp")) (li (int-link "byte-blob-stream")))) (section 3 "Version History" (ul (li "1.2 Improved handling of address without domain part") (li "1.1 Initial Release"))) (section 3 "License" (pre " Copyright 2010 Ivan Raikov and the Okinawa Institute of Science and Technology.") (pre " This program is free software: you can redistribute it and/or\n modify it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.") (pre " This program is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n General Public License for more details.") (pre " A full copy of the GPL license can be found at\n <http://www.gnu.org/licenses/>."))))