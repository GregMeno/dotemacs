(index ("make" 0) ("make/proc" 203) ("make-print-checking" 1200) ("make-print-dep-no-line" 1436) ("make-print-reasons" 1668))
(def (sig (syntax "(make ((TARGET (DEPEND ...) COMMAND ...) ...) ARGV)" (id make))) (p "Expands to") (pre " (make/proc\n   (list (list TARGET (list DEPEND ...) (lambda () COMMAND ...)) ...)\n   ARGV)"))
(def (sig (procedure "(make/proc SPEC ARGV)" (id make/proc))) (p "Performs a make according to " (tt "SPEC") " and using " (tt "ARGV") " selecting one or more targets.  " (tt "ARGV") " can either be a string or a vector or list of strings.") (p (tt "SPEC") " is a " (tt "MAKE-SPEC") ":") (pre " MAKE-SPEC = (list-of MAKE-LINE)\n MAKE-LINE = (list TARGET (list-of DEPEND-STRING) COMMAND-THUNK)\n TARGET = (union string (list-of string)) ; either a string or a list of strings\n DEPEND-STRING = string\n COMMAND-THUNK = (-> void)") (p "To make a target, " (tt "MAKE/PROC") " is first called on each of the target's dependencies. If a target is not in the spec and it exists, then the target is considered made. If a target is older than any of its dependencies, the corresponding " (tt "COMMAND-THUNK") " is invoked. The " (tt "COMMAND-THUNK") " is optional; a " (tt "MAKE-LINE") " without a " (tt "COMMAND-THUNK") " is useful as a target for making a number of other targets (the dependencies)."))
(def (sig (parameter "make-print-checking" (id make-print-checking))) (p "If " (tt "#f") ", make only prints when it is making a target. Otherwise, it prints when it is checking the dependancies of a target. Defaultly " (tt "#f") "."))
(def (sig (parameter "make-print-dep-no-line" (id make-print-dep-no-line))) (p "If " (tt "#f") ", make only prints " (tt "\"checking...\"") "  lines for dependancies that have a corresponding make line.  Defaultly " (tt "#f") "."))
(def (sig (parameter "make-print-reasons" (id make-print-reasons))) (p "If " (tt "#t") ", make prints the reason for each dependancy that fires. Defaultly " (tt "#f") "."))
