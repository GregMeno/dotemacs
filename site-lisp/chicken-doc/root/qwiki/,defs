(index ("qwiki-css-file" 0) ("qwiki-title" 325) ("qwiki-source-path" 611) ("qwiki-web-path" 1004) ("qwiki-docroot" 1545) ("qwiki-base-uri" 1780) ("qwiki-output-driver" 2018) ("qwiki-extensions" 2373) ("qwiki-update-handlers" 2667) ("qwiki-delete-handlers" 3045) ("blocked-ip-addresses-file" 3274) ("qwiki-current-file" 3565) ("qwiki-repos-uri" 3815) ("qwiki-repos-username" 3982) ("qwiki-repos-password" 4203) ("search-server-uri" 4376) ("menu-file" 4644) ("qwiki-install!" 4921) ("qwiki-post-commit-hook!" 5245))
(def (sig (parameter "(qwiki-css-file [FILE])" (id qwiki-css-file))) (p "Set an optional CSS file to use for styling the wiki.  " (tt "FILE") " should be a string, which is parsed into an uri-common object by the " (tt "uri-reference") " procedure.  This URI should be relative to the docroot.  Defaults to " (tt "#f") "."))
(def (sig (parameter "(qwiki-title [TITLE])" (id qwiki-title))) (p "Set an optional global " (tt "TITLE") " or \"name\" for the wiki.  This will appear on every page in the browser's titlebar to inform the user that he's on a page of this particular wiki. Defaults to " (tt "#f") "."))
(def (sig (parameter "(qwiki-source-path [DIRECTORY])" (id qwiki-source-path))) (p "The directory where qwiki expects a checkout of the repository that holds the wiki pages.  When running the installation procedure, it will make this checkout.") (p "The value defaults to the environment variable " (tt "QWIKI_SOURCE_PATH") " if set. Otherwise it will default to " (tt "\"/tmp/qwiki\"") "."))
(def (sig (parameter "(qwiki-web-path [DIRECTORY])" (id qwiki-web-path))) (p "The directory where qwiki will write its generated and cached HTML files to. Defaults to the environment variable " (tt "QWIKI_WEB_PATH") " if set, otherwise will default to " (tt "\"/var/www\"") ".") (p "This variable is only for when qwiki is called from the commandline or through the post-commit hook.  It is " (i "ignored") " when running qwiki through " (tt "qwiki-handler") " inside Spiffy.  In that case it will just use Spiffy's " (tt "root-path") "."))
(def (sig (parameter "(qwiki-docroot [DIRECTORY])" (id qwiki-docroot))) (p "In case you want qwiki be accessible underneath a subdirectory of spiffy, you can use this.  (it's unsure whether this even works and whether it will stay)"))
(def (sig (parameter "(qwiki-base-uri [URI])" (id qwiki-base-uri))) (p "The URI (an " (int-link "uri-common") " object) under which this wiki is available.  All internal links will use this as their base URI. Defaults to " (tt "/") "."))
(def (sig (parameter "(qwiki-output-driver [TRANSFORMATION-RULES])" (id qwiki-output-driver))) (p "This defaults to " (tt "qwiki-html-transformation-rules") " from the " (tt "qwiki-sxml") " module.  It can be changed to " (tt "qwiki-LaTeX-transformation-rules") " or " (tt "qwiki-Texinfo-transformation-rules") " when generating offline documentation."))
(def (sig (parameter "(qwiki-extensions [EXTENSIONS])" (id qwiki-extensions))) (p "This parameter can be extended to add transformation rule extensions to the output driver.  Defaults to the empty list.") (p "A transformation rule is simply a ruleset accepted by " (tt "pre-post-order*") "."))
(def (sig (parameter "(qwiki-update-handlers [HANDLERS])" (id qwiki-update-handlers))) (p "This parameter can be extended to add update callbacks which will be invoked when a wiki page was updated. Defaults to the empty list.") (p "An update hook is a procedure that accepts a path to the wiki page (a list of path components) and the sxml which represents the new contents."))
(def (sig (parameter "(qwiki-delete-handlers [HANDLERS])" (id qwiki-delete-handlers))) (p "This parameter can be extended to add update callbacks which will be invoked when a wiki page was removed. Defaults to the empty list."))
(def (sig (parameter "(blocked-ip-addresses-file [PATH])" (id blocked-ip-addresses-file))) (p "A path relative to the qwiki checkout which points to a file containing IP addresses to be blocked, one address per line. Useful for combating spam.") (p "Defaults to " (tt "\"edit-deny\"") "."))
(def (sig (parameter "(qwiki-current-file [PATH])" (id qwiki-current-file))) (p "Not to be touched in the configuration; this is a run-time parameter used to indicate the current wiki file being processed.  Useful for use in transformation rules."))
(def (sig (parameter "(qwiki-repos-uri [URI-STRING])" (id qwiki-repos-uri))) (p "The URI to the subversion repository.  Defaults to #f, so you must configure this!"))
(def (sig (parameter "(qwiki-repos-username [USERNAME])" (id qwiki-repos-username))) (p "The username for commits done from the wiki interface when the user chooses not to authenticate.  Default: " (tt "\"anonymous\"")))
(def (sig (parameter "(qwiki-repos-password [PASSWORD])" (id qwiki-repos-password))) (p "The password for the " (tt "qwiki-repos-username") " user. Default: " (tt "\"\"")))
(def (sig (parameter "(search-server-uri [URI])" (id search-server-uri))) (p "Defaults to whatever the environment variable " (tt "QWIKI_SEARCH_URI") " holds if it is set, or else " (tt "\"http://admin:admin@localhost:1978\"") ", which is the default estraier URI."))
(def (sig (parameter "(menu-file [PATH])" (id menu-file))) (p "If not " (tt "#f") ", this file will contain (in wiki syntax) the contents of the menu which is rendered on all wiki pages.  Should be relative to the wiki checkout directory.  Defaults to " (tt "\"/menu\"") "."))
(def (sig (procedure "(qwiki-install!)" (id qwiki-install!))) (p "Performs the steps for installing qwiki.  It uses the parameters " (tt "qwiki-repos-uri") ", " (tt "qwiki-source-path") " and " (tt "qwiki-web-path") " and considers their values are valid ones.") (p "This procedure is to be used by installation scripts."))
(def (sig (procedure "(qwiki-post-commit-hook!)" (id qwiki-post-commit-hook!))) (p "Executes the required steps after a commit is performed. It uses the parameters " (tt "qwiki-repos-uri") ", " (tt "qwiki-source-path") " and considers their values are valid ones.") (p "This procedure is to be used by Subversion post-commit scripts."))
