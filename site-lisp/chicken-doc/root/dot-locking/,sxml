((tags "egg") (toc) (section 2 "dot-locking" (section 3 "Introduction" (p "To bypass the restrictions of POSIX's file locks other advisory locking mechanisms, based only on standard file operations, where invented. One of them is the so-called dot-locking scheme where the lock of file-name is represented by the file " (tt "file-name.lock") ". Care is taken that only one process may generate the lock for a given file.")) (section 3 "Usage" (highlight scheme "(require-extension dot-locking)")) (section 3 "Documentation" (section 4 "obtain-dot-lock" (def (sig (procedure "(obtain-dot-lock file-name [interval retry-number stale-time])" (id obtain-dot-lock))) (p "Tries to obtain the lock for file-name. If the file is already locked, the thread sleeps for interval seconds (default is 1) before it retries. If the lock cannot be obtained after retry-number attempts, the procedure returns " (tt "#f") ", otherwise " (tt "#t") ". The default value of retry-number is " (tt "#f") " which corresponds to an infinite number of retries.") (p "If stale-time is non-" (tt "#f") ", it specifies the minimum age a lock may have (in seconds) before it is considered stale. Obtain-dot-lock attempts to delete stale locks. If it was successful obtaining a lock after breaking it, " (tt "obtain-dot-lock") " returns " (tt "'broken") ". If stale-time is " (tt "#f") ", " (tt "obtain-dot-lock") " never considers a lock stale. The default for stale-time is " (tt "300") ".") (p "Note that it is possible that obtain-dot-lock breaks a lock but nevertheless fails to obtain it otherwise. If it is necessary to handle this case specially, use " (tt "break-dot-lock") " directly (see below) rather than specifying a non-" (tt "#f") " stale-time"))) (section 4 "release-dot-lock" (def (sig (procedure "(release-dot-lock file-name)" (id release-dot-lock))) (p "Releases the lock for " (tt "file-name") ". On success, " (tt "release-dot-lock") " returns " (tt "#t") ", otherwise " (tt "#f") ". Note that this procedure can also be used to break the lock for " (tt "file-name") "."))) (section 4 "break-dot-lock" (def (sig (procedure "(break-dot-lock file-name)" (id break-dot-lock))) (p "Breaks the lock for " (tt "file-name") " if one exists. Note that breaking a lock does not imply a subsequent " (tt "obtain-dot-lock") " will succeed, as another party may have acquired the lock between " (tt "break-dot-lock") " and " (tt "obtain-dot-lock") "."))) (section 4 "with-dot-lock*" (def (sig (syntax "(with-dot-lock file-name body ...)" (id with-dot-lock)) (procedure "(with-dot-lock* file-name thunk)" (id with-dot-lock*))) (p "The procedure " (tt "with-dot-lock*") " obtains the requested lock, and then calls " (tt "(thunk)") ". When " (tt "thunk") " returns, the lock is released. A non-local exit (e.g., throwing to a saved continuation or raising an exception) also causes the lock to be released.") (p "After a normal return from " (tt "thunk") ", its return values are returned by " (tt "with-dot-lock*") ". The " (tt "with-dot-lock") " special form is equivalent syntactic sugar.")))) (section 3 "Author" (p "Olin Shivers") (p "(ported to CHICKEN by " (int-link "/users/felix-winkelmann" "felix winkelmann") ")")) (section 3 "License" (pre " Copyright (c) Olin Shivers\n All rights reserved.") (pre " Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n 3. The name of the authors may not be used to endorse or promote products\n    derived from this software without specific prior written permission.") (pre " THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n ")) (section 3 "Version History" (dl (dt "0.1") (dd "initial release")))))